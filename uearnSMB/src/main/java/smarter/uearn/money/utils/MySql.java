package smarter.uearn.money.utils;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;

import smarter.uearn.money.models.SalesStageInfo;
import smarter.uearn.money.utils.ServerAPIConnectors.APIProvider;
import smarter.uearn.money.utils.ServerAPIConnectors.API_Response_Listener;

public class MySql extends SQLiteOpenHelper {

    private static MySql mInstance = null;
    private Context mCxt;

    public static MySql getInstance(Context ctx) {
        if (mInstance == null) {
            mInstance = new MySql(ctx.getApplicationContext());
        }
        return mInstance;
    }

    private MySql(Context context) {
        super(context, "mydb", null, AppConstants.dBversion);
        this.mCxt = context;
    }

    public MySql(Context context, String name, CursorFactory factory, int version) {
        super(context, name, factory, version);
        // TODO Auto-generated constructor stub
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE IF NOT EXISTS mytbl (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER, UPLOAD_STATUS INTEGER DEFAULT 1, SMART_MAIL TEXT, DISP_BOOK_APPOINTMENT INTEGER, ATTACHMENT_URL TEXT, ATTACHMENT_NAME TEXT, ATTACHMENTS_ARRAYLIST TEXT, CCEMAIL TEXT, TRANSCRIPTION_PATH TEXT, UUID TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS ameyo_entries (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER, UPLOAD_STATUS INTEGER DEFAULT 1, SMART_MAIL TEXT, DISP_BOOK_APPOINTMENT INTEGER, ATTACHMENT_URL TEXT, ATTACHMENT_NAME TEXT, ATTACHMENTS_ARRAYLIST TEXT, CCEMAIL TEXT, SERVER_UPLOAD TEXT, RNR_COUNT INTEGER DEFAULT 0, TRANSCRIPTION_PATH TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS reminderSubjectTbl(_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT)");
        //  db.execSQL("CREATE TABLE remindertb2(_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT, NOTES TEXT, START_TIME INTEGER, END_TIME INTEGER, LOCATION TEXT, COMPANY_NAME TEXT, DESIGNATION TEXT, REPEAT TEXT, TRAVEL_TIME INTEGER, CALLREC_URL TEXT, FROM1 TEXT, TONAME TEXT, TO1 TEXT, FROMNAME TEXT, CMAIL_MAILID INTEGER, ALARMSETTO INTEGER, FIRED INTEGER, EMAILID TEXT, WEBSITE TEXT, STATUS TEXT, LASTCONTACTEDON TEXT, LAT TEXT, LONG TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS remindertbNew (_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT, NOTES TEXT, START_TIME INTEGER, END_TIME INTEGER, LOCATION TEXT, COMPANY_NAME TEXT, DESIGNATION TEXT, REPEAT TEXT, TRAVEL_TIME INTEGER, CALLREC_URL TEXT, FROM1 TEXT, TO1 TEXT, FROMNAME TEXT, TONAME TEXT, SNOOZE_DELAY INTEGER, ALARMSETTO INTEGER, FIRED INTEGER, APPOINTMENT_ID TEXT, EMAILID TEXT, WEBSITE TEXT, STATUS TEXT, RESPONSE_STATUS TEXT, CUSTOMER_ID TEXT, EXTERNAL_REFERENCE TEXT, REFERENCE_CMAIL TEXT, LEAD_SOURCE TEXT, ORDER_POTENTIAL TEXT, PRODUCT_TYPE TEXT, COMPANY_ADDRESS TEXT, COMPLETED INTEGER DEFAULT 0, UPLOAD_STATUS INTEGER DEFAULT 1, LAT TEXT, LONG TEXT, CMAIL_MAILID INTEGER, APPOINTMENT_TYPE TEXT, ASSIGN_TO TEXT, CCEMAIL TEXT, FLP_COUNT INTEGER DEFAULT 0, NOTES_IMAGE TEXT, NOTES_AUDIO TEXT, RNR_COUNT INTEGER DEFAULT 0, CREATED_AT TEXT, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT, UPDATED_AT INTEGER, EXTRANOTES TEXT, REFERRED_BY TEXT, CUSTOMKVS TEXT, QUESTIONNAIRE TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS AmeyoReminderTable (_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT, NOTES TEXT, START_TIME INTEGER, END_TIME INTEGER, LOCATION TEXT, COMPANY_NAME TEXT, DESIGNATION TEXT, REPEAT TEXT, TRAVEL_TIME INTEGER, CALLREC_URL TEXT, FROM1 TEXT, TO1 TEXT, FROMNAME TEXT, TONAME TEXT, SNOOZE_DELAY INTEGER, ALARMSETTO INTEGER, FIRED INTEGER, APPOINTMENT_ID TEXT, EMAILID TEXT, WEBSITE TEXT, STATUS TEXT, RESPONSE_STATUS TEXT, CUSTOMER_ID TEXT, EXTERNAL_REFERENCE TEXT, REFERENCE_CMAIL TEXT, LEAD_SOURCE TEXT, ORDER_POTENTIAL TEXT, PRODUCT_TYPE TEXT, COMPANY_ADDRESS TEXT, COMPLETED INTEGER DEFAULT 0, UPLOAD_STATUS INTEGER DEFAULT 1, LAT TEXT, LONG TEXT, CMAIL_MAILID INTEGER, APPOINTMENT_TYPE TEXT, ASSIGN_TO TEXT, CCEMAIL TEXT, FLP_COUNT INTEGER DEFAULT 0, CALL_STARTIME TEXT, NOTES_IMAGE TEXT, NOTES_AUDIO TEXT, RNR_COUNT INTEGER DEFAULT 0, CREATED_AT TEXT, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS SmarterContact (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAILID TEXT, STATUS TEXT, NUMBER TEXT, NOTES TEXT, UPLOAD_STATUS INTEGER DEFAULT 1, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT, EXTRANOTES TEXT, LEAD_SOURCE TEXT, WRAPUP TEXT, EVENT_START_DATE TEXT, UUID TEXT, MORECONTACTS TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS WorkOrder (_id INTEGER PRIMARY KEY AUTOINCREMENT, WORK_ORDER_ID INTEGER, SUBJECT TEXT, START_TIME INTEGER, END_TIME INTEGER, STATUS TEXT, NOTES TEXT, REMINDER_START_DATE INTEGER, WORK_COMPLETION INTEGER, CUSTOMER_NAME TEXT, CUSTOMER_NUMBER TEXT, DESIGNATION TEXT, EMAIL_ID TEXT, COMPANY_NAME TEXT, COMPANY_ADDRESS TEXT, WEBSITE TEXT, TOTAL_PRICE INTEGER, TAX INTEGER, ADVANCE_START_DATE INTEGER, RECEIVED_AMOUNT INTEGER, BALANCE_DUE_START_DATE INTEGER, AMOUNT_RECEIVABLE INTEGER, ATTACHMENTS_ARRAYLIST TEXT, CCEMAIL TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS TeamMembers (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAILID TEXT, NAME TEXT, NUMBER TEXT, ROLE TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS Ameyo_Push_Notifications (_id INTEGER PRIMARY KEY AUTOINCREMENT, CUSTOMER_NUMBER TEXT, START_TIME INTEGER, SEQUENCE_NUMBER INTEGER, TYPE TEXT, MESSAGE TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS FirstCall (_id INTEGER PRIMARY KEY AUTOINCREMENT, START_TIME INTEGER, END_TIME INTEGER, COUNTER INTEGER, VALID TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS PrivateContacts (_id INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT, NUMBER TEXT)");
        db.execSQL("CREATE TABLE IF NOT EXISTS JunkNumbers (_id INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT, NUMBER TEXT, BLOCK_CALL INTEGER DEFAULT 0)");
        db.execSQL("CREATE TABLE IF NOT EXISTS CallData (_id INTEGER PRIMARY KEY AUTOINCREMENT, STATE TEXT, NUMBER TEXT, START_TIME TEXT )");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

        if (newVersion == 3) {
            db.execSQL("DROP TABLE IF EXISTS mytbl");
            db.execSQL("DROP TABLE IF EXISTS remindertbl");
            onCreate(db);
        }

        if (oldVersion == 3 && newVersion == 4) {
            db.execSQL("CREATE TABLE reminderSubjectTbl(_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT)");
        } else if ((oldVersion == 1 && newVersion == 4) || (oldVersion == 2 && newVersion == 4)) {
            db.execSQL("DROP TABLE IF EXISTS mytbl");
            db.execSQL("DROP TABLE IF EXISTS remindertbl");
            onCreate(db);
        }

        if (oldVersion == 4 && newVersion == 5) {
            db.execSQL("DROP TABLE IF EXISTS mytbl");
            db.execSQL("CREATE TABLE mytbl (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER)");
            //Log.i("Tag1","drop mytbl");
        } else if ((oldVersion == 3 && newVersion == 5) || (oldVersion == 2 && newVersion == 5) || oldVersion == 1 && newVersion == 5) {
            db.execSQL("DROP TABLE IF EXISTS mytbl");
            db.execSQL("DROP TABLE IF EXISTS remindertbl");
            onCreate(db);
            //Log.i("Tag1","drop db");
        }

        if ((oldVersion == 4 && newVersion == 6) || oldVersion == 5 && newVersion == 6) {
            db.execSQL("DROP TABLE IF EXISTS mytbl");
            db.execSQL("CREATE TABLE mytbl (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER, UPLOAD_STATUS INTEGER DEFAULT 1)");
            //Log.i("Tag", "inside upgrade db v5to6");
        } else if ((oldVersion == 3 && newVersion == 6) || (oldVersion == 2 && newVersion == 6) || (oldVersion == 1 && newVersion == 6)) {
            db.execSQL("DROP TABLE IF EXISTS mytbl");
            db.execSQL("CREATE TABLE mytbl (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER, UPLOAD_STATUS INTEGER DEFAULT 1)");
        }
        if (newVersion == 25) {
            //Log.i("MySql","********* In new version 25 *******");
            callForGettingSalesStage();
        }
        if (oldVersion == 25 && newVersion == 26) {
            db.execSQL("DROP TABLE IF EXISTS remindertbNew");
            db.execSQL("CREATE TABLE remindertbNew (_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT, NOTES TEXT, START_TIME INTEGER, END_TIME INTEGER, LOCATION TEXT, COMPANY_NAME TEXT, DESIGNATION TEXT, REPEAT TEXT, TRAVEL_TIME INTEGER, CALLREC_URL TEXT, FROM1 TEXT, TO1 TEXT, FROMNAME TEXT, TONAME TEXT, SNOOZE_DELAY INTEGER, ALARMSETTO INTEGER, FIRED INTEGER, APPOINTMENT_ID TEXT, EMAILID TEXT, WEBSITE TEXT, STATUS TEXT, RESPONSE_STATUS TEXT, CUSTOMER_ID TEXT, EXTERNAL_REFERENCE TEXT, REFERENCE_CMAIL TEXT, LEAD_SOURCE TEXT, ORDER_POTENTIAL TEXT, PRODUCT_TYPE TEXT, COMPANY_ADDRESS TEXT, COMPLETED INTEGER DEFAULT 0, UPLOAD_STATUS INTEGER DEFAULT 1, LAT TEXT, LONG TEXT, CMAIL_MAILID INTEGER, APPOINTMENT_TYPE TEXT, ASSIGN_TO TEXT)");

        }
        if (oldVersion == 30 && newVersion == 31) {
        }
        if (newVersion > oldVersion) {
            db.execSQL("DROP TABLE IF EXISTS mytbl");
            db.execSQL("DROP TABLE IF EXISTS ameyo_entries");
            db.execSQL("DROP TABLE IF EXISTS reminderSubjectTbl");
            db.execSQL("DROP TABLE IF EXISTS remindertbNew");
            db.execSQL("DROP TABLE IF EXISTS AmeyoReminderTable");
            db.execSQL("DROP TABLE IF EXISTS SmarterContact");
            db.execSQL("DROP TABLE IF EXISTS TeamMembers");
            db.execSQL("DROP TABLE IF EXISTS FirstCall");
            db.execSQL("DROP TABLE IF EXISTS JunkNumbers");
            db.execSQL("DROP TABLE IF EXISTS PrivateContacts");
            db.execSQL("DROP TABLE IF EXISTS CallData");
            /*db.execSQL("CREATE TABLE IF NOT EXISTS mytbl (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER, UPLOAD_STATUS INTEGER DEFAULT 1, SMART_MAIL TEXT, DISP_BOOK_APPOINTMENT INTEGER, ATTACHMENT_URL TEXT, ATTACHMENT_NAME TEXT, ATTACHMENTS_ARRAYLIST TEXT, CCEMAIL TEXT, TRANSCRIPTION_PATH TEXT, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT, UUID TEXT)");*/
            db.execSQL("CREATE TABLE mytbl (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER, UPLOAD_STATUS INTEGER DEFAULT 1, SMART_MAIL TEXT, DISP_BOOK_APPOINTMENT INTEGER, ATTACHMENT_URL TEXT, ATTACHMENT_NAME TEXT, ATTACHMENTS_ARRAYLIST TEXT, CCEMAIL TEXT, TRANSCRIPTION_PATH TEXT, UUID TEXT)");
            db.execSQL("CREATE TABLE ameyo_entries (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAIL TEXT, BCC TEXT, CC TEXT, ATTACHMENT TEXT, NAME TEXT, FROM1 TEXT, TO1 TEXT, EVENT_TYPE TEXT, URL TEXT, JD_URL TEXT, JOBCARD_URL TEXT, PARENT INTEGER, LIVE_RECORDING TEXT, STARTTIME TEXT, ENDTIME TEXT, SUBJECT TEXT, UNREAD TEXT, MESSAGE TEXT, LAT TEXT, LONG TEXT, JOBCARD TEXT, ASSIGNEE TEXT, STATUS TEXT, CALLER TEXT, FILE_PATH TEXT, CMAIL_TR_COUNT INTEGER, SMS_BODY TEXT, DISP_MAP_LOC INTEGER, DISP_CALL_REC INTEGER, MSG_RECEPIENT_NO TEXT, REMINDER_ID INTEGER, UPLOAD_STATUS INTEGER DEFAULT 1, SMART_MAIL TEXT, DISP_BOOK_APPOINTMENT INTEGER, ATTACHMENT_URL TEXT, ATTACHMENT_NAME TEXT, ATTACHMENTS_ARRAYLIST TEXT, CCEMAIL TEXT, SERVER_UPLOAD TEXT, RNR_COUNT INTEGER DEFAULT 0, TRANSCRIPTION_PATH TEXT, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT)");
            db.execSQL("CREATE TABLE reminderSubjectTbl(_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT)");
            db.execSQL("CREATE TABLE remindertbNew (_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT, NOTES TEXT, START_TIME INTEGER, END_TIME INTEGER, LOCATION TEXT, COMPANY_NAME TEXT, DESIGNATION TEXT, REPEAT TEXT, TRAVEL_TIME INTEGER, CALLREC_URL TEXT, FROM1 TEXT, TO1 TEXT, FROMNAME TEXT, TONAME TEXT, SNOOZE_DELAY INTEGER, ALARMSETTO INTEGER, FIRED INTEGER, APPOINTMENT_ID TEXT, EMAILID TEXT, WEBSITE TEXT, STATUS TEXT, RESPONSE_STATUS TEXT, CUSTOMER_ID TEXT, EXTERNAL_REFERENCE TEXT, REFERENCE_CMAIL TEXT, LEAD_SOURCE TEXT, ORDER_POTENTIAL TEXT, PRODUCT_TYPE TEXT, COMPANY_ADDRESS TEXT, COMPLETED INTEGER DEFAULT 0, UPLOAD_STATUS INTEGER DEFAULT 1, LAT TEXT, LONG TEXT, CMAIL_MAILID INTEGER, APPOINTMENT_TYPE TEXT, ASSIGN_TO TEXT, CCEMAIL TEXT, FLP_COUNT INTEGER DEFAULT 0, NOTES_IMAGE TEXT, NOTES_AUDIO TEXT, RNR_COUNT INTEGER DEFAULT 0, CREATED_AT TEXT, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT, UPDATED_AT INTEGER)");
            db.execSQL("CREATE TABLE AmeyoReminderTable (_id INTEGER PRIMARY KEY AUTOINCREMENT, SUBJECT TEXT, NOTES TEXT, START_TIME INTEGER, END_TIME INTEGER, LOCATION TEXT, COMPANY_NAME TEXT, DESIGNATION TEXT, REPEAT TEXT, TRAVEL_TIME INTEGER, CALLREC_URL TEXT, FROM1 TEXT, TO1 TEXT, FROMNAME TEXT, TONAME TEXT, SNOOZE_DELAY INTEGER, ALARMSETTO INTEGER, FIRED INTEGER, APPOINTMENT_ID TEXT, EMAILID TEXT, WEBSITE TEXT, STATUS TEXT, RESPONSE_STATUS TEXT, CUSTOMER_ID TEXT, EXTERNAL_REFERENCE TEXT, REFERENCE_CMAIL TEXT, LEAD_SOURCE TEXT, ORDER_POTENTIAL TEXT, PRODUCT_TYPE TEXT, COMPANY_ADDRESS TEXT, COMPLETED INTEGER DEFAULT 0, UPLOAD_STATUS INTEGER DEFAULT 1, LAT TEXT, LONG TEXT, CMAIL_MAILID INTEGER, APPOINTMENT_TYPE TEXT, ASSIGN_TO TEXT, CCEMAIL TEXT, FLP_COUNT INTEGER DEFAULT 0, CALL_STARTIME TEXT, NOTES_IMAGE TEXT, NOTES_AUDIO TEXT, RNR_COUNT INTEGER DEFAULT 0, CREATED_AT TEXT, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT)");
            db.execSQL("CREATE TABLE SmarterContact (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAILID TEXT, STATUS TEXT, NUMBER TEXT, NOTES TEXT, UPLOAD_STATUS INTEGER DEFAULT 1, SUBSTATUS1 TEXT, SUBSTATUS2 TEXT)");
            db.execSQL("CREATE TABLE IF NOT EXISTS TeamMembers (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAILID TEXT, NAME TEXT, NUMBER TEXT, ROLE TEXT)");
            db.execSQL("CREATE TABLE FirstCall (_id INTEGER PRIMARY KEY AUTOINCREMENT, START_TIME INTEGER, END_TIME INTEGER, COUNTER INTEGER, VALID TEXT)");
            db.execSQL("CREATE TABLE PrivateContacts (_id INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT, NUMBER TEXT)");
            db.execSQL("CREATE TABLE JunkNumbers (_id INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT, NUMBER TEXT, BLOCK_CALL INTEGER DEFAULT 0)");
            db.execSQL("CREATE TABLE CallData (_id INTEGER PRIMARY KEY AUTOINCREMENT, STATE TEXT, NUMBER TEXT, START_TIME TEXT )");

        }

        /*if(newVersion > oldVersion) {
            db.execSQL("DROP TABLE IF EXISTS TeamMembers");
            db.execSQL("CREATE TABLE IF NOT EXISTS TeamMembers (_id INTEGER PRIMARY KEY AUTOINCREMENT, EMAILID TEXT, NAME TEXT, NUMBER TEXT, ROLE TEXT)");
        }*/
    }

    private void callForGettingSalesStage() {
        //TODO: change the version to our app version
        //Log.i("MySql","In Calling sales stage....... ");
        if (SmarterSMBApplication.SmartUser != null) {
            new APIProvider.Get_Sales_Status(SmarterSMBApplication.SmartUser.getId(), 1, new API_Response_Listener<SalesStageInfo>() {
                @Override
                public void onComplete(SalesStageInfo data, long request_code, int failure_code) {
                    data.dosave();
                    SmarterSMBApplication.salesStageInfo = data;
                }
            }).call();
        } else {
            //Log.e("MYSQL", "Smarter user is null");
        }
    }
}
